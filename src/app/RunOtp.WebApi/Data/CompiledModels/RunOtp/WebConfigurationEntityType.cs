// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using RunOtp.Domain.WebConfigurationAggregate;
using Shared.SeedWork;

#pragma warning disable 219, 612, 618
#nullable disable

namespace RunOtp.WebApi
{
    internal partial class WebConfigurationEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "RunOtp.Domain.WebConfigurationAggregate.WebConfiguration",
                typeof(WebConfiguration),
                baseEntityType);

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(Guid),
                propertyInfo: typeof(Entity).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Entity).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw);
            id.AddAnnotation("Relational:ColumnName", "id");
            id.AddAnnotation("Relational:ColumnType", "uuid");
            id.AddAnnotation("Relational:DefaultValueSql", "uuid_generate_v4()");

            var apiSecret = runtimeEntityType.AddProperty(
                "ApiSecret",
                typeof(string),
                propertyInfo: typeof(WebConfiguration).GetProperty("ApiSecret", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<ApiSecret>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 128);
            apiSecret.AddAnnotation("Relational:ColumnName", "api_secret");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(ModifierTrackingEntity).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ModifierTrackingEntity).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            createdBy.AddAnnotation("Relational:ColumnName", "created_by");

            var createdById = runtimeEntityType.AddProperty(
                "CreatedById",
                typeof(Guid),
                propertyInfo: typeof(ModifierTrackingEntity).GetProperty("CreatedById", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ModifierTrackingEntity).GetField("<CreatedById>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            createdById.AddAnnotation("Relational:ColumnName", "created_by_id");

            var createdDate = runtimeEntityType.AddProperty(
                "CreatedDate",
                typeof(DateTimeOffset),
                propertyInfo: typeof(DateTrackingEntity).GetProperty("CreatedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DateTrackingEntity).GetField("<CreatedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            createdDate.AddAnnotation("Relational:ColumnName", "created_date");

            var endpoint = runtimeEntityType.AddProperty(
                "Endpoint",
                typeof(string),
                propertyInfo: typeof(WebConfiguration).GetProperty("Endpoint", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<Endpoint>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            endpoint.AddAnnotation("Relational:ColumnName", "endpoint");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(ModifierTrackingEntity).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ModifierTrackingEntity).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "last_updated_by");

            var lastUpdatedById = runtimeEntityType.AddProperty(
                "LastUpdatedById",
                typeof(Guid),
                propertyInfo: typeof(ModifierTrackingEntity).GetProperty("LastUpdatedById", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ModifierTrackingEntity).GetField("<LastUpdatedById>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            lastUpdatedById.AddAnnotation("Relational:ColumnName", "last_updated_by_id");

            var lastUpdatedDate = runtimeEntityType.AddProperty(
                "LastUpdatedDate",
                typeof(DateTimeOffset),
                propertyInfo: typeof(DateTrackingEntity).GetProperty("LastUpdatedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DateTrackingEntity).GetField("<LastUpdatedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            lastUpdatedDate.AddAnnotation("Relational:ColumnName", "last_updated_date");

            var selected = runtimeEntityType.AddProperty(
                "Selected",
                typeof(bool),
                propertyInfo: typeof(WebConfiguration).GetProperty("Selected", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<Selected>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            selected.AddAnnotation("Relational:ColumnName", "selected");

            var status = runtimeEntityType.AddProperty(
                "Status",
                typeof(WebStatus),
                propertyInfo: typeof(WebConfiguration).GetProperty("Status", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<Status>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            status.AddAnnotation("Relational:ColumnName", "status");

            var url = runtimeEntityType.AddProperty(
                "Url",
                typeof(string),
                propertyInfo: typeof(WebConfiguration).GetProperty("Url", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<Url>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            url.AddAnnotation("Relational:ColumnName", "url");

            var webName = runtimeEntityType.AddProperty(
                "WebName",
                typeof(string),
                propertyInfo: typeof(WebConfiguration).GetProperty("WebName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<WebName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            webName.AddAnnotation("Relational:ColumnName", "web_name");

            var webType = runtimeEntityType.AddProperty(
                "WebType",
                typeof(WebType),
                propertyInfo: typeof(WebConfiguration).GetProperty("WebType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(WebConfiguration).GetField("<WebType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            webType.AddAnnotation("Relational:ColumnName", "web_type");

            var key = runtimeEntityType.AddKey(
                new[] { id });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "pk_web_configuration");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "data");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "web_configuration");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
